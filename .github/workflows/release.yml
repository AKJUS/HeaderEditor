name: release

on:
  push:
    tags:
      - '[0-9].[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform(amo,cws,xpi,edge,crx)'
        required: true
        type: string
      version:
        description: 'Version'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm i --frozen-lockfile
    - name: Build Firefox v2
      run: npm run build:firefox_v2
    - name: Build Firefox v3
      run: npm run build:firefox_v3
    - name: Build Chrome v2
      run: npm run build:chrome_v2
    - name: Build Chrome v3
      run: npm run build:chrome_v3
    - name: Upload bundle
      uses: actions/upload-artifact@v4
      with:
        name: dist
        retention-days: 7
        path: |
          dist_chrome_v2
          dist_chrome_v3
          dist_firefox_v2
          dist_firefox_v3
    - name: Install Edge
      id: install-edge
      run: |
        sudo apt-get remove -y microsoft-edge-stable
        sudo wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/microsoft.gpg
        sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
        sudo apt-get update
        sudo apt-get install -y microsoft-edge-stable=138.0.3351.109-1
        microsoft-edge --version
        EDGE_PATH=$(which microsoft-edge)
        echo "edge-path=$EDGE_PATH" >> $GITHUB_OUTPUT
    - name: Test
      env:
        EDGE_PATH: ${{ steps.install-edge.outputs.edge-path }}
      run: |
        npx puppeteer browsers install
        php -S 0.0.0.0:8899 -t $GITHUB_WORKSPACE/tests/simple-server &
        sleep 3
        npm run test:e2e
    - name: Pack
      env:
        AMO_KEY: ${{ secrets.AMO_KEY }}
        AMO_SECRET: ${{ secrets.AMO_SECRET }}
        CRX_PRIV_KEY: ${{ secrets.CRX_PRIV_KEY }}
        CRX_PRIV_KEY_V3: ${{ secrets.CRX_PRIV_KEY_V3 }}
        CWS_CLIENT_ID: ${{ secrets.CWS_CLIENT_ID }}
        CWS_CLIENT_SECRET: ${{ secrets.CWS_CLIENT_SECRET }}
        CWS_TOKEN: ${{ secrets.CWS_TOKEN }}
        MS_CLIENT_ID: ${{ secrets.MS_CLIENT_ID }}
        MS_API_KEY: ${{ secrets.MS_API_KEY }}
      run: npm run pack
    - name: Upload release
      uses: actions/upload-artifact@v4
      with:
        retention-days: 7
        name: release
        path: temp/release
    - name: Release
      if: ${{ github.ref_type == 'tag' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TOKEN: ${{ secrets.SNAPSHOT_TOKEN }}
      run: npm run release
