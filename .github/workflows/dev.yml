name: dev

on:
  push:
    branches:
    - dev
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform(amo,cws,xpi,edge,crx)'
        required: true
        type: string
      version:
        description: 'Version'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_changes:
    runs-on: ubuntu-24.04
    outputs:
      locale_changed: ${{ steps.filter.outputs.locale }}
      docs_changed: ${{ steps.filter.outputs.docs }}
      src_changed: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref_name }}
          filters: |
            locale:
              - 'locale/**'
            docs:
              - 'docs/**'
            src:
              - 'src/**'
              - 'public/**'
              - 'scripts/**'
              - 'tests/**'
              - 'patches/**'
              - 'rsbuild.config.ts'
              - 'pnpm-lock.yaml'

  build:
    needs: check_changes
    runs-on: ubuntu-24.04
    if: ${{ needs.check_changes.outputs.src_changed == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
    - uses: actions/checkout@v4
    - name: Inject Env
      run: |
        echo "INPUT_PLATFORM=${{ github.event.inputs.platform }}" >> $GITHUB_ENV
        echo "INPUT_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
    - uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm i --frozen-lockfile
    - name: Get snapshot version
      env:
        TOKEN: ${{ secrets.SNAPSHOT_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: node ./scripts/get-snapshot-version.mjs
    - name: Build And Test
      uses: ./.github/actions/build-and-test
    - name: Publish snapshot
      env:
        AMO_KEY: ${{ secrets.AMO_KEY }}
        AMO_SECRET: ${{ secrets.AMO_SECRET }}
        CRX_PRIV_KEY: ${{ secrets.CRX_PRIV_KEY }}
        PACK_PLATFORM: xpi,crx
        DEBUG: '*'
      run: npm run pack
    - name: Upload snapshot release
      uses: actions/upload-artifact@v4
      with:
        name: release
        retention-days: 7
        path: temp/release

  sync-locale:
    needs: check_changes
    runs-on: ubuntu-24.04
    if: ${{ needs.check_changes.outputs.locale_changed == 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Sort
      run: node ./locale/sort-origin.js
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: sync-locale
        folder: locale
        clean: false
        commit-message: '[skip ci] sync locale'

  build-docs:
    needs: check_changes
    runs-on: ubuntu-24.04
    if: ${{ needs.check_changes.outputs.docs_changed == 'true' }}
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Install dependencies
      run: |
        cd $GITHUB_WORKSPACE/docs
        pnpm i --frozen-lockfile
    - name: Build
      run: |
        cd $GITHUB_WORKSPACE/docs
        npm run build
        cp $GITHUB_WORKSPACE/scripts/www/* $GITHUB_WORKSPACE/docs/doc_build/
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: docs
        retention-days: 1
        path: docs/doc_build

  deploy-docs-cloudflare:
    needs: build-docs
    runs-on: ubuntu-24.04
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Download
      uses: actions/download-artifact@v5
      with:
        name: docs
        path: docs
    - name: Deploy Cloudflare Pages
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      run: npx wrangler@3 pages deploy docs --project-name=${{ vars.CF_PAGE_NAME }} --branch=dev

  deploy-docs-eo:
    needs: build-docs
    runs-on: ubuntu-24.04
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Download
      uses: actions/download-artifact@v5
      with:
        name: docs
        path: docs
    - name: Deploy EdgeOne Pages
      run: npx edgeone pages deploy $GITHUB_WORKSPACE/docs -n ${{ vars.EO_PAGE_NAME }} -t ${{ secrets.EO_PAGE_TOKEN }} -e preview
